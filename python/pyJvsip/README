This directory contains a module which demonstrates a VSIPL inspired, python vector/matrix signal processing library.
The (pyJvsip) module imports the vsip module and the vsiputils module. They must be installed for pyJvsip to work properly.

NOTE:
The vsip module is the raw C VSIPL library as a python module. Encapsulation was done using SWIG.
SWIG provides type information in the encapsulation but all the naming and use of VSIPL functions
remains pretty much the same as in C VSIPL.

The vsiputils module works on top of the vsip module but uses type information supplied by the 
SWIG encapsulation of C VSIPL to overlaod vsipl functions. Basically the VSIPL object can be
queried for its type and the function selection is done using dictionaries. The functions in
vsiputils still use the basic C VSIPL objects which must be created and destroyed. The basic
fabric of C VSIPL is still there except SWIG has provided us with type information.

The pyJvsip module defines true python clases to wrap the C VSIPL objects. For instance
pyJvsip has a block and view class which wrap the C VSIPL block and view objects in a 
python object. No init, finalize, create or destroy is required in the pyJvsip implementation
as all that is handled by the pyJvsip implementation and the python garbage collector.
In documentation I will try to be clear when I am speaking of a C VSIPL view and when I
am speaking of the pyJvsip view.

STATUS
Draft and under development
I have used pyJvsip fairly extensively. It's bug quotient has been significantely reduced since version 0.1.
There is still much work to be done to extend pyJvsip to support all the functions supplied by the
JVSIP C Library
